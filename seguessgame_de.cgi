#!/usr/bin/perl############################################   Guess Game v1.0 by Allen C. Huffman   ## Copyright (C) 2001 by Sub-Etha Software ##                FREEWARE!                ##            subetha@pobox.com            ##      http://disneyfans.com/subetha      ############################################## You may do whatever you want with this code, provided you put a comment in that# says "Based on" (or similar) and my original copyright notice above.## Revision History:## 2001/08/03 1.0 Initial (working) version.## 2001/08/09 - Updates and translation to Germany:## I reworked the script a bit and added some# ÈginglesÇ. E.g. you can choose the level# and teh magic number is not readible in# plain text when viewing the source code.## The output is in German but I guess it# won't be to big a problem.## Have fun with it!# # Therese Telepski# therese@art-promo.de# http://www.art-promo.de/#################################################### Configuratian##################################################### Where do we send the user when they are done playing?#$done_playing_URL = "http://www.spielkalb.de/denken.htm";## If you want to count how many play the game, specify# a path to the count data file here, else leave it empty.#$counter_path = "../data/seguessgame.dat";## Location/name of this script... Hopefully you won't have to change# this, but if you do it should be something like "/cgi-bin/seguessgame.cgi"# or wherver your script is and whatever it is called...## $this_script = "$ENV{'SCRIPT_NAME'}";$this_script = "seguessgame.cgi";# Librariesrequire "../lib/cgi-lib.pl";require "../lib/general_config.pl";#Script Debug$DEBUG = 0;$fct = $DEBUG == 1 ? "text" : "hidden";#################################################### Processing#################################################### Form input&ReadParse(*form_data);print "Content-type:text/html\n\nFormulardaten eingelesen $form_data<br>\n" if $DEBUG == 1;# Some variables$max			= $form_data{'max'};$tries		= $form_data{'tries'};$guess		= $form_data{'guess'};# The magic numberif ($max ne ""){	if ($form_data{'magic'} ne "")	{		$magic = &decode_number($form_data{'magic'});	}	else	{		$magic = int(rand($max-1)) + 1;	}}$encoded_magic	= &encode_number($magic);print "Zufallszahl oder aus Formular $magic<br>\nZufallszahl kodiert $encoded_magic<br>\n" if $DEBUG == 1;# if no input, this must be the first time the script has ran...if (!$form_data){	&new_game;	exit(0);}# Play one more timeelsif ($form_data{'playagain_button'} ne ""){	print "Location: $this_script\n\n";	exit(0);}# Stop playingelsif ($form_data{'endgame_button'} ne ""){	print "Location: $done_playing_URL\n\n";	exit(0);}# Giving upelsif ($form_data{'giveup_button'} ne ""){	&giveup;	exit(0);}# Keep on guessingelse{	$tries++;	&do_top;	if ( $guess < $magic )	{		print "<h3 align=\"center\">Das war zu niedrig!</h3>\n";	}	elsif ( $guess > $magic )	{		print "<h3 align=\"center\">Das war zu hoch!</h3>\n";	}	else	{		print "<h3 align=\"center\">Sie haben es geraten und nur ";		if ( $tries == 1 )		{			print "einen Versuch ";		}		else		{			print "$tries Versuche ";		}		print "benötigt!</p>\n";		&play_again;		&do_end;		exit(0);	}	&do_form;	&do_end;	exit(0);}#################################################### Subroutines#################################################### if no input, this must be the first time the script has ran...sub new_game{	$tries = 0;	&do_top;	# if we have specified a counter file, let's use it.	if ($counter_path)	{		unless ( open(FILE, "+<$counter_path") )		{			open( FILE,"+>$counter_path") || &CgiDie ("Kann Datei $counter_path nicht anlegen - $!.\n" );		}		$count = <FILE>;		chomp($count);		$count++;		seek(FILE,0,0);		truncate(FILE,0);		print FILE "$count";		close(FILE);		print "Counterfile aktualisiert - $count<br>\n" if $DEBUG == 1;		print "<p align=\"center\">Dieses Spiel wurde bislang $count Mal gespielt.";	}		&do_form;	&do_end;}# Start of each HTML outputsub do_top{	print "Content-Type: text/html\n\n";	print qq§<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Zahlen raten</title></head>$bodytag<div align="center"><center><table border="0" cellpadding="2" cellspacing="1" width="100%">	<tr>		<td valign="top"><h2><font $hfonttag>Zahlen raten</font></h2></td>		<td valign="top" align="right"><font $fonttag><a target="_self" href="javascript:history.back()">Zurück</a></font></td>	</tr></table><font $fonttag>$separator<div align="center"><center><p align="center">	§;}# End of HTML outputsub do_end{	print qq§$separator<table border="0" cellpadding="0" width="80%">	<tr>		<td width="100%"><h3><font $hfonttag>Spielregeln:</font></h3></td>	</tr>	<tr>		<td width="100%"><table border="0" cellpadding="0" cellspacing="0" width="100%">			<tr>				<td valign="baseline" width="42">$bullet1</td>				<td valign="top" width="100%"><font $fonttag>Beim ersten Aufruf wählen Sie den Schwierigkeitsgrad und geben Ihren ersten Tip ab.</font></td>			</tr>			<tr>				<td valign="baseline" width="42">$bullet1</td>				<td valign="top" width="100%"><font $fonttag>Bei den folgenden Aufrufen müssen Sie mit möglichst wenig Versuchen die vom Computer				ausgedachte Zahl raten.</font></td>			</tr>		</table>		$separator		<p><font $fonttag>Hier geht's zum <a href="http://disneyfans.com/subetha" target="_blank">Original</a>. Im Gegensatz zu dort ist die magische		Zahl hier allerdings kodiert.</font></td>	</tr></table></center></div></font></body></html>	§;}# Print user formsub do_form{	print qq§<form action="$this_script" method="post">	§;	if ($tries > 0)	{		print qq§<p align="center">Ich habe mir eine Zahl zwischen 1 und $max ausgedacht</p>	<input type="$fct" value="$max" name="max">	<input type="$fct" name="magic" value="$encoded_magic"><div align="center">Was denken Sie, welche? (1-$max)		§;	}	else	{		print qq§<h3 align="center">Ich denke mir eine Zahl zwischen 1 und <select name="max" onChange="document.forms[0].showmax.value=document.forms[0].max.options[document.forms[0].max.selectedIndex].value">	<option value="10">10</option>	<option value="100" selected>100</option>	<option value="1000">1000</option></select> aus.</h3><div align="center">Was denken Sie, welche? (1-<input type="text" value="100" readonly onFocus="this.blur()" name="showmax" size="4">)		§;	}	print qq§<input type="text" name="guess" size="4" maxlength="4"><input type="submit" value="Raten"><input type="submit" name="giveup_button" value="Aufgeben"></div>	<input type="$fct" name="tries" value="$tries"></form>	§;}# Play one more timesub play_again{	print qq§<form action="$this_script" method="post"><div align="center">Möchten Sie noch einmal spielen?<input type="submit" name="playagain_button" value=" Ja "><input type="submit" name="endgame_button" value="Nein"></div></form>	§;}# Giving upsub giveup{	&do_top;	print qq§<h3 align="center">Die magische Zahl war $magic ...</h3> <p>Sie haben nach 	§;		if ( $tries==1 )		{			print "einem Versuch ";		}		else		{			print "$tries Versuchen ";		}		print "aufgegeben.</p>\n";		&play_again;		&do_end;		exit(0);}# Encode the magic number for making it a bit harder to get # it by simply looking into the source codesub encode_number{	local($number) = $_[0];	local($result) = 11 + ($number-2)*($number-2)*($number-2);	return ($result);}# Decode the form input of the magic number for further calculationssub decode_number{	local($number) = $_[0];	local($result);	if($number > 11)	{		$result = int(exp((log($number-11))/3)+0.00000005) + 2;	}	elsif($number == 3)	{		$result = 0;	}	elsif($number == 10)	{		$result = 1;	}	elsif ($number == 11)	{		$result = 2;	}	return ($result);}